@using ChessTourBuilderApp.Data.DataBases
@using ChessTourBuilderApp.Data.HelpClasses
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject Data.Settings.ISettingServise settingsService

<div class="">
    <div class="">
        @Body
    </div>
</div>

@code
{
    protected override async void OnInitialized()
    {
        if (DeviceInfo.Platform == DevicePlatform.Android) 
        {
            if (settingsService.IsFirstRun)
            {
                // Выполните действия только при первом запуске
                await DoFirstRunActions();

                // Установите флаг первого запуска в false
                settingsService.IsFirstRun = false;
            }
        }


        string flag = await DataBase.GetFlag();
        if (Convert.ToInt32(flag) == 1)
        {
            if (!await DataBase.ChangeConnection()) NavigationManager.NavigateTo("/setting");
            StaticResouses.mainControler = new(true);
        }
        else 
        {
            if (!DataBase.ChangeConnectionLite()) NavigationManager.NavigateTo("/setting");
            StaticResouses.mainControler = new(false);
        }

        
    }

    private async Task DoFirstRunActions()
    {
        string tempFilePath = Path.Combine(FileSystem.CacheDirectory, "temp.txt");
        await File.WriteAllTextAsync(tempFilePath, "0");
        string localFilePath = Path.Combine(FileSystem.AppDataDirectory, "FlagBD.txt");
        File.Copy(tempFilePath, localFilePath, overwrite: true);
        File.Delete(tempFilePath);

        tempFilePath = Path.Combine(FileSystem.CacheDirectory, "serverSetting.txt");
        await File.WriteAllTextAsync(tempFilePath, "");
        localFilePath = Path.Combine(FileSystem.AppDataDirectory, "serverSetting.txt");
        File.Copy(tempFilePath, localFilePath, overwrite: true);
        File.Delete(tempFilePath);
    }
}

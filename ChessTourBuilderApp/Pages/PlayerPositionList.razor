@page "/playerPositionList"
@layout MainLayout
@using System.Text.RegularExpressions
@using ChessTourBuilderApp.Data.HelpClasses
@using ChessTourBuilderApp.Data.Model
@inject NavigationManager NavigationManager

<body class="main-conteneer">
    <div class="top-row-conteneer">
        <button class="icon" @onclick="@(()=>OnClickNavigate("/navMenu"))"></button>
        <h1 class="top-row-text text" href="">@(Data.HelpClasses.Helper.FI())</h1>
    </div>
    <section class="main-conteneer-block">
        <input @bind-value="like" class="input-main" placeholder="Поиск" type="text">
    </section>
    <section>
        <div class="color-first pozition-conteneer">
            <div class="text-pozition">Позиция</div>
            <div class="input-main text-aling text-pozition">Игрок</div>
            <div class="input-main text-aling text-pozition">Очки</div>
        </div>
        @foreach (var item in ds.Where(p => Regex.IsMatch(p.Fi, like + @"(\w*)", RegexOptions.IgnoreCase)))
        {
            <div class="color-second pozition-conteneer">
                <div class="text-pozition">@item.Pozition</div>
                <div class="input-main text-aling text-pozition">@item.Fi</div>
                <div class="input-main text-aling text-pozition">@item.Points</div>
            </div>
        }
    </section>
</body>

@code {

    string like;
    static List<ResultSheme> ds = new();

    protected override async Task OnInitializedAsync()
    {
        await Initializa();
        if (ds == null) ds = new();
        StateHasChanged();
    }

    private void OnClickNavigate(string str) => NavigationManager.NavigateTo(str);

    private async static Task Initializa()
    {
        ds = StaticResouses.mainControler.EventControler.nowEvent.TypeEvent ?
           await StaticResouses.mainControler.ResultTableControler.GetResultTable(StaticResouses.mainControler.EventControler.nowEvent.GetTableName())
        :
           await StaticResouses.mainControler.ResultTableControler.GetResultTableСircle(StaticResouses.mainControler.EventControler.nowEvent.GetTableName());
    }
}
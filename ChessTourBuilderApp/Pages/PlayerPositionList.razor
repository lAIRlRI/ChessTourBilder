@page "/playerPositionList"
@layout MainLayout
@using System.Data
@using ChessTourBuilderApp.Data.DataBases
@inject NavigationManager NavigationManager


<body class="main-conteneer">
    <div class="top-row-conteneer">
        <button class="icon" @onclick="@(()=>OnClickNavigate("/navMenu"))"></button>
        <h1 class="top-row-text text" href="">@(Data.HelpClasses.Helper.FI())</h1>
    </div>
    <section class="main-conteneer-block">
        <input class="input-main" placeholder="Поиск" type="text">
    </section>
    <section>
        <div class="color-first pozition-conteneer">
            <div class="text-pozition">Позиция</div>
            <div class="input-main text-aling text-pozition">Игрок</div>
            <div class="input-main text-aling text-pozition">Очки</div>
        </div>
        @foreach (var item in ds)
        {
            <div class="color-second pozition-conteneer">
                <div class="text-pozition">@i</div>
                <div class="input-main text-aling text-pozition">@item.Fi</div>
                <div class="input-main text-aling text-pozition">@item.Points</div>
            </div>
            i++;
        }
    </section>
</body>

@code {
    List<ResultSheme> ds = Data.Controler.EventControler.nowEvent.TypeEvent ?
            DataBase.Read(";with playerSum as" +
            $"(select PlayerID, Sum(Result) as Points from {Data.Controler.EventControler.nowEvent.GetTableName()} group by PlayerID)" +
            "select Concat(FirstName, '', MiddleName) as Fi, Points from Player pl inner join playerSum p on pl.FIDEID = p.PlayerID order by Points desc", ResultSheme.mapper)
        :
            DataBase.Read(";with playerSum as" +
            $"(select PlayerID, Sum(Result) as Points from {Data.Controler.EventControler.nowEvent.GetTableName()} where Result <> 0.5 group by PlayerID)" +
            "select Concat(FirstName, '', MiddleName) as Fi, Points from Player pl inner join playerSum p on pl.FIDEID = p.PlayerID order by Points desc", ResultSheme.mapper);

    int i = 1;

    private void OnClickNavigate(string str) => NavigationManager.NavigateTo(str);

    public class ResultSheme
    {
        public static readonly Func<IDataReader, ResultSheme> mapper = r => new ResultSheme()
            {
                PlayerID = r["PlayerID"].ToString(),
                Points = r["Points"].ToString(),
                Fi = r["Fi"].ToString(),
            };
        public string PlayerID { get; set; }
        public string Points { get; set; }
        public string Fi { get; set; }
    }
}

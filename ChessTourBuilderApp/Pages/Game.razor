@page "/game"
@layout MainLayout
@using ChessTourBuilderApp.Data.HelpClasses
@using Data.Controler
@inject NavigationManager NavigationManager

<body class="main-conteneer">
    <div class="top-row-conteneer">
        <div class="nav-item">
            <button class="icon" @onclick="@(()=>OnClickNavigation("/navMenu"))"></button>
            <button class="top-row-text text" @onclick="@(()=>OnClickNavigation("/tour"))">Назад</button>
        </div>
        <h1 class="top-row-text text" href="">@(Data.HelpClasses.Helper.FI())</h1>
    </div>
    <div class="info-conteneer">
        <section class="info-item3">
            <h3 class="text">Белыми: @whiteP</h3>
            <h3 class="text">Черными: @blackP</h3>
            <h3 class="text">Время: @ConsignmentControler.nowConsignment.DateStart</h3>
            <h3 class="text">Результат: @ConsignmentControler.nowConsignment.whitePlayer.Result : @ConsignmentControler.nowConsignment.blackPlayer.Result</h3>
            <h3 class="text">Стутус: @Helper.status[EventControler.nowEvent.StatusID-1]"</h3>
        </section>
    </div>
    <section class="pozition-conteneer">
        <div class="element">
            <h3 class="text">@ConsignmentControler.nowConsignment.GameMove</h3>
        </div>
    </section>
    @if (ConsignmentControler.nowConsignment.StatusID == 2 && EventControler.nowEvent.StatusID != 1)
    {
        <button class="top-row-text text" @onclick="@(()=>OnClickNavigation("/gameMove"))">Играть</button>
    }
</body>

@code {
    string blackP = ConsignmentControler.nowConsignment.blackPlayer.player.FirstName + " " + ConsignmentControler.nowConsignment.blackPlayer.player.MiddleName;
    string whiteP = ConsignmentControler.nowConsignment.whitePlayer.player.FirstName + " " + ConsignmentControler.nowConsignment.whitePlayer.player.MiddleName;

    private void OnClickNavigation(string str) => NavigationManager.NavigateTo(str);
}